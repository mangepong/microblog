# Python CircleCI 2.0 configuration file
version: 2.1
orbs:
    snyk: snyk/snyk@0.0.8
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: mangepong/microblog
    docker:
    - image: circleci/buildpack-deps:stretch

jobs:
  test:
    docker:
      - image: circleci/python:3.7

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: Install dev dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install-dev
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            make test-unit
            make test-integration

  snyk:
      docker:
          - image: circleci/python:3.5
      working_directory: ~/repo
      steps:
          - checkout
          - run:
              name: Install dependencies
              command: |
                  python3 -m venv venv
                  . venv/bin/activate
                  make install
          - run: echo "source ~/repo/venv/bin/activate" >> $BASH_ENV
          - snyk/scan

  build_image:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t $IMAGE_NAME:latest -f docker/Dockerfile_prod .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
         name: Load archived Docker image
         command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest

  deploy-latest:
    executor: docker-publisher
    steps:
      - checkout
      - run:
         name: Install dependancies
         command: |
             sudo apt-get install python3-venv
             python3 -m venv venv
             . venv/bin/activate
             pip install wheel
             make install-deploy
             pip install ansible[azure]
      - run:
          name: Deploy appServer
          command: |
              . venv/bin/activate
              cd ansible
              ansible-playbook gather_vm_instances.yml appServer.yml

workflows:
  version: 2
  build-master:
   jobs:
     - test:
         filters:
           branches:
             only: master
     - snyk:
         filters:
            branches:
              only: master
     - build_image:
         requires:
           - test
         filters:
           branches:
             only: master
     - publish-latest:
         requires:
           - build_image
         filters:
           branches:
             only: master
     - deploy-latest:
         requires:
           - publish-latest
         filters:
           branches:
             only: master
